(this.webpackJsonpreact=this.webpackJsonpreact||[]).push([[0],{13:function(e,t,s){e.exports=s(36)},18:function(e,t,s){},36:function(e,t,s){"use strict";s.r(t);var a=s(1),n=s.n(a),r=s(11),o=s.n(r),l=(s(18),s(12));const u=s.n(l).a.create({baseURL:"https://jsonplaceholder.typicode.com"});u.interceptors.request.use(e=>(e.headers.Autorization="token",e)),u.interceptors.response.use(e=>(console.log("server call is sucess"),e),e=>(console.log("server call error"),"errorred"));var c=u;class i extends n.a.Component{constructor(e){super(e),this.handlecal=()=>{this.setState({username:[{name:this.state.userinput},...this.state.username],userinput:""})},this.state={username:[],userinput:""}}componentDidMount(){c.get("/users").then(e=>e.data).then(e=>{this.setState({username:e})}),c({method:"post",url:"/users",data:{userinput:this.state.userinput}}).then(e=>{console.log("data has been posted sucessfully")}).catch(e=>{console.log("errorred")})}render(){return n.a.createElement("div",{className:"hold"},n.a.createElement("input",{className:"hold-txt",type:"text",value:this.state.userinput,onChange:e=>{this.setState({userinput:e.target.value})}}),n.a.createElement("input",{className:"btn",type:"submit",value:"Add Name",onClick:()=>{this.handlecal()}}),n.a.createElement("div",{className:"out1"},n.a.createElement("ul",null,this.state.username.map(e=>n.a.createElement("li",null,e.name," ")))))}}var p=i;const h=document.getElementById("root");o.a.render(n.a.createElement(n.a.StrictMode,null,n.a.createElement(p,null)),h)}},[[13,1,2]]]);
//# sourceMappingURL=main.0040f60f.chunk.js.map